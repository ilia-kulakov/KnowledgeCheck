package com.epam.javatraining.knowledgecheck.model.dao;

import com.epam.javatraining.knowledgecheck.exception.DAOException;
import com.epam.javatraining.knowledgecheck.model.connection.ConnectionPool;
import com.epam.javatraining.knowledgecheck.model.connection.ConnectionPoolManager;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.math.BigInteger;
import java.sql.*;

public class AbstractDao {
    protected static final Logger logger = LogManager.getLogger("DAO");
    protected ConnectionPool connectionPool;
    private Connection connection;

    public AbstractDao() {
        connectionPool = ConnectionPoolManager.getConnectionPool();
    }

//    private void initConnection() throws DAOException{
//        try {
//            connection = connectionPool.getConnection();
//        } catch (SQLException e) {
//            logger.error(e.getMessage(), e);
//            throw new DAOException("Connection to Data Base failed.", e);
//        }
//    }
//
//    public PreparedStatement getPreparedStatement(String sql) throws DAOException {
//        return getPreparedStatement(sql, Statement.NO_GENERATED_KEYS);
//    }
//
//    public PreparedStatement getPreparedStatement(String sql, int autoGeneratedKeys) throws DAOException {
//        PreparedStatement ps;
//
//        initConnection();
//
//        try {
//            ps = connection.prepareStatement(sql, autoGeneratedKeys);
//        } catch (SQLException e) {
//            logger.error(e.getMessage(), e);
//            throw new DAOException("Prepare SQL statement failed.", e);
//        }
//
//        return ps;
//    }
//
//    public void closePrepareStatement(PreparedStatement ps) {
//        closeStatement(ps);
//    }
//
//    public Statement getStatement() throws DAOException {
//        Statement statement;
//
//        initConnection();
//
//        try {
//            statement = connection.createStatement();
//        } catch (SQLException e) {
//            logger.error(e.getMessage(), e);
//            throw new DAOException("Prepare SQL statement failed.", e);
//        }
//
//        return statement;
//    }
//
//    public void closeStatement(Statement statement) {
//        if (statement != null) {
//            try {
//                statement.close();
//            } catch (SQLException e) {
//                logger.error(e.getMessage(), e);
//            } finally {
//                connectionPool.releaseConnection(connection);
//            }
//        }
//    }

    protected Connection getConnection() throws SQLException {
        return connectionPool.getConnection();
    }

    protected void closeCommunication(Connection connection, Statement statement) {
        closeCommunication(connection, statement, null);
    }

    protected void closeCommunication(Connection connection, Statement statement, ResultSet resultSet) {
        try {
            if(resultSet != null) {
                resultSet.close();
            }
            if(statement != null) {
                statement.close();
            }
        } catch (SQLException e) {
            // do nothing
            logger.error(e.getMessage(), e);
        } finally {
            if(connection != null) {
                connectionPool.releaseConnection(connection);
            }
        }
    }

    public BigInteger getGenKey(PreparedStatement ps) throws SQLException, DAOException {
        BigInteger resultId;
        try (ResultSet generatedKeys = ps.getGeneratedKeys()) {
            if (generatedKeys.next()) {
                resultId = (BigInteger) generatedKeys.getObject(1);
            } else {
                DAOException e = new DAOException("Creating Data Base record failed, no ID obtained.");
                logger.error(e.getMessage(), e);
                throw e;
            }
        }

        return resultId;
    }
}
